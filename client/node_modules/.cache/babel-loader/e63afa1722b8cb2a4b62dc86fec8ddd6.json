{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Memories\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useEffect } from 'react';\nimport useStyles from './styles';\nimport { Typography, Paper, TextField, Button } from '@material-ui/core';\nimport { useState } from 'react';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = _ref => {\n  let {\n    currentID,\n    setCurrentID\n  } = _ref;\n  const post = useSelector(state => currentID ? state.posts.find(p => p._id === currentID) : null);\n  useEffect(() => {\n    if (post) {\n      setPostData(post);\n    }\n  }, [post]);\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const dispatch = useDispatch();\n  const classes = useStyles(); //why async\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentID) {\n      dispatch(updatePost(currentID, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentID(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, currentID ? 'Updating a Memory' : 'Creating a Memory'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    variant: \"outlined\",\n    label: \"Creator\",\n    fullWidth: true,\n    value: postData.creator,\n    onChange: e => setPostData({ ...postData,\n      creator: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref2 => {\n      let {\n        base64\n      } = _ref2;\n      return setPostData({ ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 46\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"names":["React","useEffect","useStyles","Typography","Paper","TextField","Button","useState","FileBase","useDispatch","useSelector","createPost","updatePost","Form","currentID","setCurrentID","post","state","posts","find","p","_id","setPostData","postData","creator","title","message","tags","selectedFile","dispatch","classes","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["C:/Users/User/Memories/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport useStyles from './styles';\r\nimport {Typography,Paper,TextField,Button} from '@material-ui/core'\r\nimport { useState } from 'react';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { createPost,updatePost } from '../../actions/posts';\r\nconst Form=({currentID,setCurrentID})=>{\r\n    const post=useSelector((state)=>currentID?state.posts.find((p)=>p._id===currentID):null);\r\n    useEffect(()=>{\r\n      if(post)\r\n      {\r\n        setPostData(post);\r\n      }\r\n    },[post]) \r\n    const [postData,setPostData]=useState({\r\n        creator:'',\r\n        title:'',\r\n        message:'',\r\n        tags:'',\r\n        selectedFile:''\r\n    });\r\n    const dispatch=useDispatch();\r\n    const classes=useStyles();\r\n    //why async\r\n    const handleSubmit= async(e)=>{\r\n        e.preventDefault();\r\n        if(currentID)\r\n        {\r\n          dispatch(updatePost(currentID,postData))\r\n        }\r\n        else\r\n        {\r\n          dispatch(createPost(postData));\r\n        }\r\n        clear();\r\n    }\r\n    const clear=()=>{\r\n        setCurrentID(null);\r\n        setPostData({\r\n          creator:'',\r\n          title:'',\r\n          message:'',\r\n          tags:'',\r\n          selectedFile:''\r\n      });\r\n    }\r\n    return(\r\n        <Paper className={classes.paper}>\r\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n          <Typography variant=\"h6\">{currentID?'Updating a Memory':'Creating a Memory'}</Typography>\r\n          <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n          <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n          <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n          <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n          <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n          <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n        </form>\r\n      </Paper>\r\n    )\r\n}\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}